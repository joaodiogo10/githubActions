name: Deploy to AWS

on:
  pull_request:
    branches:    
      - main
      - development
    paths:
      - src/**
      - .github/workflows/*
    
  push:
    branches:    
      - main
      - development
    paths:
      - src/**
      - .github/workflows/*


env:
  ECR_REGISTRY_ALIAS: incrivel
  ECR_REPOSITORY: github_actions_test               # set this to your Amazon ECR repository name
  ECS_SERVICE: ServiceDemo                          # set this to your Amazon ECS service name
  ECS_CLUSTER: ClusterDemo                          # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json    # set this to the path to your Amazon ECS task definition
                                                    # file, e.g. .aws/task-definition.json
  API_CONTAINER_NAME: fastAPI-container             # set this to the name of the container in the
                                                    # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials (us-east-1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push docker api image to Amazon ECR Public
        id: build-api-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          #ECR_REGISTRY_ALIAS: ${{ ECR_REGISTRY_ALIAS }}
          IMAGE_TAG: ${{ github.sha }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials (change to eu-west-3 region)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Fill in api ID to ECS task definition
        id: api-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.API_CONTAINER_NAME }}
          image: ${{ steps.build-api-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
        with:
          task-definition: ${{ steps.api-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
